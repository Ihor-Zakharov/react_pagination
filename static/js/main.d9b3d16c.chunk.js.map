{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onChange","useState","current","setCurrent","useEffect","pagesAmount","useMemo","Math","ceil","pages","leftButtonDisabled","rightButtonDisabled","handleChange","useCallback","prevState","handleLeftButtonClick","handleRightButtonCLick","className","classNames","disabled","href","onClick","map","page","active","items","perPageOptions","App","setPerPage","onPageChange","onPerPageChange","event","target","value","lastVisibleItemIndex","firstVisibleItemIndex","itemsLength","length","min","id","option","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9b3d16c.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\r\n  const numbers = [];\r\n\r\n  for (let n = from; n <= to; n += 1) {\r\n    numbers.push(n);\r\n  }\r\n\r\n  return numbers;\r\n}\r\n","import {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onChange,\n}) => {\n  const [current, setCurrent] = useState<number>(1);\n\n  useEffect(() => {\n    setCurrent(currentPage);\n  }, [currentPage]);\n\n  const pagesAmount = useMemo(\n    () => Math.ceil(total / perPage),\n    [total, perPage],\n  );\n  const pages = useMemo(() => getNumbers(1, pagesAmount), [pagesAmount]);\n\n  const leftButtonDisabled = useMemo(() => current === 1, [current]);\n  const rightButtonDisabled = useMemo(\n    () => current === pagesAmount,\n    [current, pagesAmount],\n  );\n\n  const handleChange = useCallback(() => {\n    setCurrent((prevState) => {\n      onChange(prevState);\n\n      return prevState;\n    });\n  }, [onChange]);\n\n  const handleLeftButtonClick = useCallback(() => {\n    if (!leftButtonDisabled) {\n      setCurrent(current - 1);\n\n      handleChange();\n    }\n  }, [current, leftButtonDisabled]);\n\n  const handleRightButtonCLick = useCallback(() => {\n    if (!rightButtonDisabled) {\n      setCurrent(current + 1);\n\n      handleChange();\n    }\n  }, [current, rightButtonDisabled]);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: leftButtonDisabled })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link \"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n          onClick={handleLeftButtonClick}\n        >\n          «\n        </a>\n      </li>\n      {pages.map((page) => (\n        <li\n          className={classNames('page-item', { active: page === current })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => {\n              setCurrent(page);\n              handleChange();\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames('page-item', { disabled: rightButtonDisabled })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n          onClick={handleRightButtonCLick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nconst perPageOptions: number[] = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [current, setCurrent] = useState(1);\n  const [perPage, setPerPage] = useState(perPageOptions[0]);\n\n  const onPageChange = useCallback((page: number) => {\n    setCurrent(page);\n  }, []);\n\n  const onPerPageChange = useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) => {\n      setPerPage(+event.target.value);\n      setCurrent(1);\n    },\n    [],\n  );\n\n  const lastVisibleItemIndex = useMemo(\n    () => current * perPage,\n    [current, perPage],\n  );\n\n  const firstVisibleItemIndex = useMemo(\n    () => lastVisibleItemIndex - perPage,\n    [lastVisibleItemIndex, perPage],\n  );\n\n  const itemsLength = useMemo(() => items.length, [items]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${current} (items ${firstVisibleItemIndex} - ${Math.min(\n          lastVisibleItemIndex,\n          itemsLength,\n        )} of ${itemsLength})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => onPerPageChange(event)}\n          >\n            {perPageOptions.map((option) => (\n              <option value={`${option}`} key={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={itemsLength}\n        perPage={perPage}\n        currentPage={current}\n        onChange={onPageChange}\n      />\n\n      <ul>\n        {items\n          .slice(firstVisibleItemIndex, lastVisibleItemIndex)\n          .map((item) => (\n            <li data-cy=\"item\" key={item}>\n              Item\n              {' '}\n              {item}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}